@model BranchModel
@{
    Layout = "~/Views/Shared/_ColumnsTwoIntro.cshtml";
    //current branchGroup ID
    int currentBranchGroupId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("BranchGroupRead", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("Detail", StringComparison.InvariantCultureIgnoreCase))
    {
        currentBranchGroupId = Convert.ToInt32(Url.RequestContext.RouteData.Values["id"].ToString());
    }

    //current branch ID
    int currentBranchId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("BranchRead", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("Detail", StringComparison.InvariantCultureIgnoreCase))
    {
        currentBranchId = Convert.ToInt32(Url.RequestContext.RouteData.Values["id"].ToString());
    }
}
@section left{
    @Html.Action("BranchGroupNavigation","BranchGroupRead", new {currentBranchGroupId = currentBranchGroupId, currentBranchId = currentBranchId})
}
@section YouAreHere{
    <div class="youAreHere">
        <ul>
            <li><a href="@Url.RouteUrl("Homepage")">@T("Homepage")</a></li>
            <li class="active"><a href="#">@Html.Raw(Model.Title)</a></li>
        </ul>
    </div>
}

<h4 class="titleIntroDiv">@Html.Raw(Model.Title)</h4>
<div class="row rightContent">
    <div class="row col-xs-12 col_right newsItem ">
        <div class="col-sm-4 imageProject">
            <img src="@Model.PictureModel.FullSizeImageUrl">
        </div>
        <div class="col-sm-8 branch">
            @Html.Raw(Model.Short)
        </div>
        <div class="clr"></div>
        <div class="row col-xs-12 col_right newsItem ">
            <h5>Giới Thiệu</h5> 
            @Html.Raw(Model.Full)
        </div>
        <div class="clr"></div>
        <div class="row col-xs-12 col_right newsItem ">
            <h5>Vị trí</h5>
            <div class="col-sm-12 imageProject">
                <div id="map_canvas" style="width: 800px; height: 480px;"></div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>
    <script type="text/javascript">
    var map;
    var spot = new google.maps.LatLng(@(Model.Latitude) , @(Model.Longitude));
        var mapCenter = new google.maps.LatLng(@(Model.Latitude) , @(Model.Longitude));
        var mapOptions = {
            center: mapCenter, zoom: 17,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        function initialize() {
            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
            var iconShadow = new google.maps.MarkerImage(
              "http://www.google.com/mapfiles/ms/micons/msmarker.shadow.png",
              new google.maps.Size(59, 32),
              new google.maps.Point(0, 0),
              new google.maps.Point(15, 32));

            var marker = new google.maps.Marker({
                map: map,
                position: spot,
                icon: "http://www.google.com/mapfiles/markerA.png",
                shadow: iconShadow
            });

            var infowindow = new google.maps.InfoWindow({
                content: '<div class="infoMap">@Html.Raw(Model.Short.Replace("\r\n","").Replace("'","\""))</div>'
            });

            infowindow.open(map, marker);
        }

        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
