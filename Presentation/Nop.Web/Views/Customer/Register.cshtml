@model RegisterModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
}
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addEmptyStateIfRequired": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}
<div class="youAreHere">
    <ul>
        <li><a href="@Url.RouteUrl("Homepage")">@T("Homepage")</a></li>
        <li class="active"><a href="#">@T("Account.Register")</a></li>
    </ul>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row content-sub-page register">
        <div class="col-7 formSignin">
            <h3 class="form-signin-heading">@T("Account.Register")</h3>
            <div style="width: 500px; padding-bottom: 50px;">
                <div class="row"><span style="float: right;">(*) là phần thông tin bắt buộc</span></div>
                <div class="row">@Html.ValidationSummary(true)</div>
                <div class="row">
                    @Html.LabelFor(model => model.FirstName, new { }, ":")
                    @Html.RequiredHint()
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                    <div class="clr"></div>
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.LastName, new { }, ":")
                    @Html.RequiredHint()
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                    <div class="clr"></div>
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.Email, new { }, ":")
                    @Html.RequiredHint()
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    <div class="clr"></div>
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
                @if (Model.UsernamesEnabled)
                {
                    <div class="row">
                        @Html.LabelFor(model => model.Username, new { }, ":")
                        @Html.RequiredHint()
                        @Html.EditorFor(model => model.Username)
                        <div class="clr"></div>
                        @Html.ValidationMessageFor(model => model.Username)
                        @if (Model.CheckUsernameAvailabilityEnabled)
                        {
                            @Html.Partial("_CheckUsernameAvailability")
                        }
                    </div>

                }
                @if (Model.CompanyEnabled)
                {
                    <div class="row">
                        @Html.LabelFor(model => model.Company, new { }, ":")
                        @if (Model.CompanyRequired)
                        {
                            @Html.RequiredHint()
                        }
                        @Html.TextBoxFor(model => model.Company, new { @class = "form-control" })
                        <div class="clr"></div>
                        @Html.ValidationMessageFor(model => model.Company)
                    </div>
                }
                
                @if (Model.StreetAddressEnabled || Model.StreetAddress2Enabled || Model.ZipPostalCodeEnabled
                     || Model.CityEnabled || Model.CountryEnabled)
                {
                    if (Model.StreetAddressEnabled)
                    {
                        <div class="row">
                            @Html.LabelFor(model => model.StreetAddress, new { }, ":")
                            @if (Model.StreetAddressRequired)
                            {
                                @Html.RequiredHint()
                            }
                            @Html.TextBoxFor(model => model.StreetAddress, new { @class = "form-control" })
                            <div class="clr"></div>
                            @Html.ValidationMessageFor(model => model.StreetAddress)
                        </div>
                    }
                    if (Model.StreetAddress2Enabled)
                    {
                        <div class="row">
                            @Html.LabelFor(model => model.StreetAddress2, new { }, ":")
                            @if (Model.StreetAddress2Required)
                            {
                                @Html.RequiredHint()
                            }
                            @Html.TextBoxFor(model => model.StreetAddress2, new { @class = "form-control" })
                            <div class="clr"></div>
                            @Html.ValidationMessageFor(model => model.StreetAddress2)
                        </div>
                    }
                    if (Model.ZipPostalCodeEnabled)
                    {
                        <div class="row">
                            @Html.LabelFor(model => model.ZipPostalCode, new { }, ":")
                            @if (Model.ZipPostalCodeRequired)
                            {
                                @Html.RequiredHint()
                            }
                            @Html.TextBoxFor(model => model.ZipPostalCode, new { @class = "form-control" })
                            <div class="clr"></div>
                            @Html.ValidationMessageFor(model => model.ZipPostalCode)
                        </div>
                    }
                    if (Model.CityEnabled)
                    {
                        <div class="row">
                            @Html.LabelFor(model => model.City, new { }, ":")
                            @if (Model.CityRequired)
                            {
                                @Html.RequiredHint()
                            }
                            @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                            <div class="clr"></div>
                            @Html.ValidationMessageFor(model => model.City)
                        </div>
                    }
                    if (Model.CountryEnabled)
                    {
                        <div class="row">
                            @Html.LabelFor(model => model.CountryId, new { }, ":")
                            @Html.DropDownList("CountryId", Model.AvailableCountries, new { @class = "form-control" })
                        </div>
                    }
                    if (Model.CountryEnabled && Model.StateProvinceEnabled)
                    {
                        <div class="row">
                            @Html.LabelFor(model => model.StateProvinceId, new { }, ":")
                            @Html.DropDownList("StateProvinceId", Model.AvailableStates, new { @class = "form-control" })
                            <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                        </div>
                    }
                }
                @if (Model.PhoneEnabled || Model.FaxEnabled)
                {

                    if (Model.PhoneEnabled)
                    {
                        <div class="row">
                            @Html.LabelFor(model => model.Phone, new { }, ":")
                            @if (Model.PhoneRequired)
                            {
                                @Html.RequiredHint()
                            }
                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })

                            <div class="clr"></div>
                            @Html.ValidationMessageFor(model => model.Phone)
                        </div>
                    }
                    if (Model.FaxEnabled)
                    {
                        <div class="row">
                            @Html.LabelFor(model => model.Fax, new { }, ":")
                            @if (Model.FaxRequired)
                            {
                                @Html.RequiredHint()
                            }
                            @Html.TextBoxFor(model => model.Fax, new { @class = "form-control" })

                            <div class="clr"></div>
                            @Html.ValidationMessageFor(model => model.Fax)
                        </div>
                    }
                }

                <div class="row">
                    @Html.LabelFor(model => model.Password, new { }, ":")
                    @Html.RequiredHint()
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    <div class="clr"></div>
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
                <div class="row">
                    @Html.LabelFor(model => model.ConfirmPassword, new { }, ":")
                    @Html.RequiredHint()
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                    <div class="clr"></div>
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                </div>
                @if (Model.DisplayCaptcha)
                {
                    <div class="row">
                        @Html.Raw(Html.GenerateCaptcha())
                    </div>
                }
                <div class="row">

                    <button type="reset" class="btn btn-danger" style="margin-left: 10px;">@T("Account.Reset.Button")</button>
                    <button type="submit" id="register-button" class="btn btn-danger" name="register-button">@T("Account.Register.Button")</button>
                </div>
            </div>
        </div>
        <div class="col-3 formRegister" style="padding-top:50px;">
            @Html.Action("TopicBlock", "Topic", new { systemName = "RegistrationBenefits" })
        </div>
    </div>
}
        @*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="page registration-page">
                <div class="page-title">
                    <h1>@T("Account.Register")</h1>
                </div>
                <div class="page-body">
                    <div class="message-error">
                        @Html.ValidationSummary(true)
                    </div>
                    @Html.Partial("_ExternalAuthentication.AssociateMessage")
                    <div class="fieldset">
                        <div class="title">
                            <strong>@T("Account.YourPersonalDetails")</strong>
                        </div>
                        <div class="form-fields">
                            @if (Model.GenderEnabled)
                            {
                                <div class="row">
                                    <label>@T("Account.Fields.Gender"):</label>
                                    <span class="gender">
                                        @Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "gender-male" })
                                        <span class="forcheckbox" for="gender-male">@T("Account.Fields.Gender.Male")</span>
                                    </span>
                                    <span class="gender">
                                        @Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "gender-female" })
                                        <span class="forcheckbox" for="gender-female">@T("Account.Fields.Gender.Female")</span>
                                    </span>
                                </div>
                            }
                            <div class="row">
                                @Html.LabelFor(model => model.FirstName, new { }, ":")
                                @Html.EditorFor(model => model.FirstName)
                                @Html.RequiredHint()
                                @Html.ValidationMessageFor(model => model.FirstName)
                            </div>
                            <div class="row">
                                @Html.LabelFor(model => model.LastName, new { }, ":")
                                @Html.EditorFor(model => model.LastName)
                                @Html.RequiredHint()
                                @Html.ValidationMessageFor(model => model.LastName)
                            </div>
                            @if (Model.DateOfBirthEnabled)
                            {
                                <div class="row">
                                    <label>@T("Account.Fields.DateOfBirth"):</label>
                                    @Html.DatePickerDropDowns(Html.FieldNameFor(x => x.DateOfBirthDay),
                                Html.FieldNameFor(x => x.DateOfBirthMonth),
                                Html.FieldNameFor(x => x.DateOfBirthYear),
                                DateTime.Now.Year - 110,
                                DateTime.Now.Year,
                                Model.DateOfBirthDay,
                                Model.DateOfBirthMonth,
                                Model.DateOfBirthYear)
                                    @Html.ValidationMessageFor(model => model.DateOfBirthDay)
                                    @Html.ValidationMessageFor(model => model.DateOfBirthMonth)
                                    @Html.ValidationMessageFor(model => model.DateOfBirthYear)
                                </div>
                            }
                            <div class="row">
                                @Html.LabelFor(model => model.Email, new { }, ":")
                                @Html.EditorFor(model => model.Email)
                                @Html.RequiredHint()
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                            @if (Model.UsernamesEnabled)
                            {
                                <div class="row">
                                    @Html.LabelFor(model => model.Username, new { }, ":")
                                    @Html.EditorFor(model => model.Username)
                                    @Html.RequiredHint()
                                    @Html.ValidationMessageFor(model => model.Username)
                                    @if (Model.CheckUsernameAvailabilityEnabled)
                                    {
                                        @Html.Partial("_CheckUsernameAvailability")
                                    }
                                </div>

                            }
                        </div>
                    </div>
                    @if (Model.CompanyEnabled || Model.DisplayVatNumber)
                    {
                        <div class="fieldset">
                            <div class="title">
                                <strong>@T("Account.CompanyDetails")</strong>
                            </div>
                            <div class="form-fields">
                                @if (Model.CompanyEnabled)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.Company, new { }, ":")
                                        @Html.EditorFor(model => model.Company)
                                        @if (Model.CompanyRequired)
                                        {
                                            @Html.RequiredHint()
                                        }
                                        @Html.ValidationMessageFor(model => model.Company)
                                    </div>
                                }
                                @if (Model.DisplayVatNumber)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.VatNumber, new { }, ":")
                                        @Html.EditorFor(model => model.VatNumber)&nbsp;&nbsp;&nbsp;@Model.VatNumberStatusNote
                                        <span class="vat-note"><em>@T("Account.Fields.VatNumber.Note")</em></span>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    @if (Model.StreetAddressEnabled || Model.StreetAddress2Enabled || Model.ZipPostalCodeEnabled
            || Model.CityEnabled || Model.CountryEnabled)
                    {
                        <div class="fieldset">
                            <div class="title">
                                <strong>@T("Account.YourAddress")</strong>
                            </div>
                            <div class="form-fields">
                                @if (Model.StreetAddressEnabled)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.StreetAddress, new { }, ":")
                                        @Html.EditorFor(model => model.StreetAddress)
                                        @if (Model.StreetAddressRequired)
                                        {
                                            @Html.RequiredHint()
                                        }
                                        @Html.ValidationMessageFor(model => model.StreetAddress)
                                    </div>
                                }
                                @if (Model.StreetAddress2Enabled)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.StreetAddress2, new { }, ":")
                                        @Html.EditorFor(model => model.StreetAddress2)
                                        @if (Model.StreetAddress2Required)
                                        {
                                            @Html.RequiredHint()
                                        }
                                        @Html.ValidationMessageFor(model => model.StreetAddress2)
                                    </div>
                                }
                                @if (Model.ZipPostalCodeEnabled)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.ZipPostalCode, new { }, ":")
                                        @Html.EditorFor(model => model.ZipPostalCode)
                                        @if (Model.ZipPostalCodeRequired)
                                        {
                                            @Html.RequiredHint()
                                        }
                                        @Html.ValidationMessageFor(model => model.ZipPostalCode)
                                    </div>
                                }
                                @if (Model.CityEnabled)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.City, new { }, ":")
                                        @Html.EditorFor(model => model.City)
                                        @if (Model.CityRequired)
                                        {
                                            @Html.RequiredHint()
                                        }
                                        @Html.ValidationMessageFor(model => model.City)
                                    </div>
                                }
                                @if (Model.CountryEnabled)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.CountryId, new { }, ":")
                                        @Html.DropDownList("CountryId", Model.AvailableCountries)
                                    </div>
                                }
                                @if (Model.CountryEnabled && Model.StateProvinceEnabled)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.StateProvinceId, new { }, ":")
                                        @Html.DropDownList("StateProvinceId", Model.AvailableStates)
                                        <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    @if (Model.PhoneEnabled || Model.FaxEnabled)
                    {
                        <div class="fieldset">
                            <div class="title">
                                <strong>@T("Account.YourContactInformation")</strong>
                            </div>
                            <div class="form-fields">
                                @if (Model.PhoneEnabled)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.Phone, new { }, ":")
                                        @Html.EditorFor(model => model.Phone)
                                        @if (Model.PhoneRequired)
                                        {
                                            @Html.RequiredHint()
                                        }
                                        @Html.ValidationMessageFor(model => model.Phone)
                                    </div>
                                }
                                @if (Model.FaxEnabled)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.Fax, new { }, ":")
                                        @Html.EditorFor(model => model.Fax)
                                        @if (Model.FaxRequired)
                                        {
                                            @Html.RequiredHint()
                                        }
                                        @Html.ValidationMessageFor(model => model.Fax)
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    @if (Model.NewsletterEnabled)
                    {
                        <div class="fieldset">
                            <div class="title">
                                <strong>@T("Account.Options")</strong>
                            </div>
                            <div class="form-fields">
                                <div class="row">
                                    @Html.LabelFor(model => model.Newsletter, new { }, ":")
                                    @Html.EditorFor(model => model.Newsletter)
                                    @Html.ValidationMessageFor(model => model.Newsletter)
                                </div>
                            </div>
                        </div>
                    }
                    @if (Model.AllowCustomersToSetTimeZone)
                    {
                        <div class="fieldset">
                            <div class="title">
                                <strong>@T("Account.Preferences")</strong>
                            </div>
                            <div class="form-fields">
                                @if (Model.AllowCustomersToSetTimeZone)
                                {
                                    <div class="row">
                                        @Html.LabelFor(model => model.TimeZoneId, new { }, ":")
                                        @Html.DropDownList("TimeZoneId", Model.AvailableTimeZones)
                                        @Html.ValidationMessageFor(model => model.TimeZoneId)
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    <div class="fieldset">
                        <div class="title">
                            <strong>@T("Account.YourPassword")</strong>
                        </div>
                        <div class="form-fields">
                            <div class="row">
                                @Html.LabelFor(model => model.Password, new { }, ":")
                                @Html.EditorFor(model => model.Password)
                                @Html.RequiredHint()
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                            <div class="row">
                                @Html.LabelFor(model => model.ConfirmPassword, new { }, ":")
                                @Html.EditorFor(model => model.ConfirmPassword)
                                @Html.RequiredHint()
                                @Html.ValidationMessageFor(model => model.ConfirmPassword)
                            </div>
                            @if (Model.DisplayCaptcha)
                            {
                                <div class="captcha-box">
                                    @Html.Raw(Html.GenerateCaptcha())
                                </div>
                            }
                        </div>
                    </div>
                    @if (Model.AcceptPrivacyPolicyEnabled)
                    {
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('#register-button').click(function () {
                                    if ($('#accept-privacy-policy').is(':checked')) {
                                        //do some stuff
                                        return true;
                                    }
                                    else {
                                        //just show validation errors, dont post
                                        alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                        return false;
                                    }
                                });
                            });
                        </script>
                        <div class="accept-privacy-policy">
                            <input id="accept-privacy-policy" type="checkbox" name="accept-privacy-policy" />
                            <label for="accept-privacy-policy">@T("Account.Fields.AcceptPrivacyPolicy")</label>
                            <a class="read" href='@Url.RouteUrl("Topic", new { SystemName = "privacyinfo" })'>@T("Account.Fields.AcceptPrivacyPolicy.Read")</a>
                        </div>
                    }
                    <div class="buttons">
                        <input type="submit" id="register-button" class="button-1 register-next-step-button" value="@T("Account.Register.Button")" name="register-button" />
                    </div>
                </div>
            </div>
        }*@
