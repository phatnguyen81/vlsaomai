@model ProductDetailsModel
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title, meta
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }
    Html.AddScriptParts("~/Scripts/js/tab/tabcontent.js");
}
@section YouAreHere{
    @Html.Action("ProductBreadcrumb", "Catalog", new { productId = Model.Id })
}
<!--product breadcrumb-->

<div class="productsContent" style="padding-top:0px !important;">
    <div class="row productDetail">
        @Html.Widget("productdetails_top")
        @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
        {
            <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                
                @Html.Widget("productdetails_before_pictures")
                <!--product pictures-->
                @Html.Partial("_ProductDetailsPictures", Model)
                @Html.Widget("productdetails_after_pictures")
                <div class="col-sm-7 info">
                    <h3 itemprop="name" class="productTitle">@Html.Raw(Model.Name)</h3>
                    @{
                        var dataDictPrice = new ViewDataDictionary();
                        dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", Model.Id);
                        @Html.Partial("_ProductPrice", Model.ProductPrice, dataDictPrice)
                    }
                    <p>
                        @Html.Raw(Model.ShortDescription)
                    </p>
                    @{
                        var dataDictAddToCart = new ViewDataDictionary();
                        dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                        @Html.Partial("_AddToCart", Model.AddToCart, dataDictAddToCart)
                    }
                </div>
                <div class="row subTabs" style="clear:both;">
                    <ul class="nav nav-justified tabs" data-persist="true">
                        <li><a href="#view1">@T("Product.Overview")</a></li>
                        <li><a href="#view2">@T("Product.Specification")</a></li>
                        <li><a href="#view3">@T("Product.Reviews")</a></li>
                        <li><a href="#view4">@T("Product.Recommended")</a></li>
                    </ul>
                </div>
                <div class="row tabcontents">
                    <!-- view1 -->
                    <div id="view1">
                        @Html.Raw(Model.FullDescription)
                    </div>

                    <!-- view2 -->
                    <div id="view2">
                        @Html.Action("ProductSpecifications", "Catalog", new { productId = Model.Id })
                    </div>

                    <!-- view3 -->
                    <div id="view3">
                        @Html.Action("ProductReviewOverview", "Catalog", new { productId = Model.Id })
                    </div>

                    <!-- view4 -->
                    <div id="view4">
                        @Html.Action("ProductsAlsoPurchased", "Catalog", new { productId = Model.Id })
                    </div>
                </div>
                @Html.Action("RelatedProducts", "Catalog", new { productId = Model.Id })
                    @*<div class="overview">
                    <div class="product-name">
                        <h1 itemprop="name">
                            @Model.Name
                        </h1>
                    </div>
                    @if (!String.IsNullOrEmpty(Model.ShortDescription))
                    {
                        <div class="short-description">
                            @Html.Raw(Model.ShortDescription)
                        </div>
                    }
                    @Html.Widget("productdetails_overview_top")
                    <!--product SKU, manufacturer part number, stock info-->
                    @Html.Partial("_SKU_Man_Stock", Model)
                    <!--Back in stock subscription-->
                    @Html.Partial("_BackInStockSubscription", Model)
                    <!--product manufacturers-->
                    @Html.Action("ProductManufacturers", "Catalog", new { productId = Model.Id })
                    <!--product reviews-->
                    @Html.Action("ProductReviewOverview", "Catalog", new { productId = Model.Id })
                    <!--sample download-->
                    @Html.Partial("_DownloadSample", Model)
                    <!--attributes-->
                    @{
                    var dataDictAttributes = new ViewDataDictionary();
                    dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                    @Html.Partial("_ProductAttributes", Model.ProductVariantAttributes, dataDictAttributes)
                    }
                    <!--gift card-->
                    @{
                    var dataDictGiftCard = new ViewDataDictionary();
                    dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", Model.Id);
                    @Html.Partial("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                    }
                    <!--price & add to cart-->
                    @{
                    var dataDictPrice = new ViewDataDictionary();
                    dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", Model.Id);
                    @Html.Partial("_ProductPrice", Model.ProductPrice, dataDictPrice)

                    var dataDictAddToCart = new ViewDataDictionary();
                    dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                    @Html.Partial("_AddToCart", Model.AddToCart, dataDictAddToCart)
                    }
                    @Html.Action("ProductEmailAFriendButton", "Catalog", new { productId = Model.Id })
                    @Html.Action("CompareProductsButton", "Catalog", new { productId = Model.Id })
                    @Html.Action("ShareButton", "Catalog")
                    @Html.Widget("productdetails_overview_bottom")
                </div>
                @if (!String.IsNullOrEmpty(Model.FullDescription))
                {
                    <div class="full-description" itemprop="description">
                        @Html.Raw(Model.FullDescription)
                    </div>
                }
            @Html.Widget("productdetails_before_collateral")
            <div class="product-collateral">
                @Html.Action("ProductTierPrices", "Catalog", new { productId = Model.Id })
                @Html.Action("ProductSpecifications", "Catalog", new { productId = Model.Id })
                @Html.Action("ProductTags", "Catalog", new { productId = Model.Id })
                @Html.Action("ProductsAlsoPurchased", "Catalog", new { productId = Model.Id })
                @Html.Action("RelatedProducts", "Catalog", new { productId = Model.Id })
            </div>*@
                </div>
        }
        @Html.Widget("productdetails_bottom")
    </div>
</div>

